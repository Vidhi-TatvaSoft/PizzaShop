@using DAL.ViewModels;
@model DAL.ViewModels.PaginationViewModel<OrderViewModel>;


<!-- Tax list -->
<div class="user-list-main-div row  d-md-flex justify-content-between mt-2">

    <!-- Tax txt -->
    <div class="user-text fs-2 fw-bold text-primary col-md-1">Orders</div>
    <div class="d-flex justify-content-end col-lg-10 row pe-0">
        <div class="search-button-orders  col-lg-3 col-6 ">
            <input type="text" id="searchbtn" placeholder="Search" class=" borderm-2 mt-1 me-3 p-2 w-100"
                placeholder="Search">

        </div>

        <div class="col-lg-3 col-6">
            <select class="w-100 m-1 me-3 p-2 " id="status">
                <option value="All Status" selected>All Status</option>
                <option value="Pending">Pending</option>
                <option value="In Progress">In Progress</option>
                <option value="Served">Served</option>
                <option value="Completed">Completed</option>
                <option value="Cancelled">Cancelled</option>
                <option value="On Hold">On Hold</option>
                <option value="Failed">Failed</option>
            </select>
        </div>
        <div class="d-md-flex d-lg-none row justify-content-between pe-0 m-0">
            <div class=" col-lg-3 ps-0 col-md-9 col-sm-8 col-7 ">
                <select class="m-1 me-3 p-2 w-100" id="timePeriod">
                    <option value="All Time" selected>All Time</option>
                    <option value="7">Last 7 Days</option>
                    <option value="30">Last 30 Days</option>
                    <option value="Current Month">Current Month</option>

                </select>

            </div>
            <a class="btn btn-primary m-1 me-0 p-2 ps-3 pe-3 " id="ExportBtn" style="max-width: fit-content;"
                onclick="ExportOrders()"><i class="fa-solid fa-share-from-square mt-1 "></i>&nbsp;Export</a>

        </div>
        <div class="form-floating  d-lg-flex d-none col-lg-3 pe-1 col-md-6">
            <select class="m-1 me-3 p-2 w-100" id="timePeriod2">
                <option value="All Time" selected>All Time</option>
                <option value="7">Last 7 Days</option>
                <option value="30">Last 30 Days</option>
                <option value="Current Month">Current Month</option>
            </select>

        </div>
        <a class="btn btn-primary d-lg-flex d-none m-1 p-1 pt-2 " id="ExportBtn2" style="max-width: fit-content;"
            onclick="ExportOrders()"><i class="fa-solid fa-share-from-square mt-1"></i>&nbsp;&nbsp;Export</a>
        @* <div class="form-floating col-lg-3 col-6 ">
            <input type="date" id="startDate" class="form-control m-2 me-3 p-2 w-100 pe-0">
            <label class="ms-3 mt-1">From Date</label>

        </div>
        <div class="form-floating col-lg-3 col-6">
            <input type="date" id="endDate" class="form-control m-2 me-3 p-2 w-100 pe-0">
            <label class="ms-3 mt-1">To Date</label>
        </div>
        <a class="btn btn-primary m-2 p-3 pt-2 pb-2 pt-3" style="max-width: fit-content;" id="searchfordate">Search</a>
        <a class="btn btn-outline-primary m-2 p-3 pb-2 pt-3" style="max-width: fit-content;"
            id="clearBtnForDate">Clear</a> *@

            <div class="form-floating col-lg-3 col-6 ">
            <input type="text" id="startDate"  placeholder="Start date" onfocus="(this.type='date')"
                onblur="(this.type='text')" class="m-2 me-3 p-2 w-100 pe-0">

        </div>
        <div class="form-floating col-lg-3 col-6">
            <input type="text" id="endDate" class="m-2 me-3 p-2 w-100 pe-0" placeholder="End date"
                onfocus="(this.type='date')" onblur="(this.type='text')">

        </div>
        <a id="searchfordate" class="btn btn-primary m-2 p-3 pt-2 pb-2" style="max-width: fit-content;"
            >Search</a>
        <a id="clearBtnForDate" class="btn btn-outline-primary m-2 p-3 pb-2 pt-2" style="max-width: fit-content;"
            >Clear</a>


    </div>


</div>

<!-- table -->
<div class="container">
    <div class="table-main-div table-responsive mt-3 bg-white mx-auto ">
        <table id="example" class="table display">
            <thead>
                <tr>
                    <th scope="col" class="text-nowrap">#Order <i class="bi bi-arrow-down-up" id="sort-orderId"
                            data-column="OrderId" data-direction="asc"></i></th>
                    <th scope="col" class="text-nowrap text-center">Date  <i class="bi bi-arrow-down-up" id="sort-date"
                            data-column="Date" data-direction="asc"></i></th>
                    <th scope="col" class="text-nowrap text-center">Customer  <i class="bi bi-arrow-down-up"
                            id="sort-customer" data-column="Customer" data-direction="asc"></i></th>
                    <th scope="col" class="text-nowrap text-center">Status</th>
                    <th scope="col" class="text-nowrap text-center">Payment Mode</th>
                    <th scope="col" class="text-nowrap text-center">Rating</th>
                    <th scope="col" class="text-nowrap text-center">Total Amount  <i class="bi bi-arrow-down-up"
                            id="sort-amount" data-column="Amount" data-direction="asc"></i></th>
                    <th scope="col" class="text-nowrap text-center">Action </th>
                </tr>
            </thead>
            <tbody id="TableBody">
                @* @await Html.PartialAsync("_TaxListPartial", Model) *@

            </tbody>
        </table>

    </div>
    @*  Pagination div *@
    <div class="pagination-main-div d-flex justify-content-end gap-2 p-3 pt-0 bg-white ">

        <span class="mt-2">Items Per page:</span>

        <select id="itemsperpage">
            <option value="5">5</option>
            <option value="10">10</option>
            <option value="15">15</option>
        </select>

        <span class=" mt-2 ms-1" id="pagination-text"></span>
        <a id="left-arrow" class="btn border border-dark bg-light ms-2">&lt;</a>
        <a id="right-arrow" class="btn border border-dark bg-light ms-2">&gt;</a>
    </div>
</div>

@section scripts {
    <script>
        // Export to Excel Function
        function ExportOrders() {
            searchText = $("#searchbtn").val().trim();
            status = $("#status").val();
            timePeriod = $("#timePeriod").val();
            $.ajax({
                url: "/Order/ExportOrderDataToExcel",
                type: "GET",
                data: { search: searchText, status, timePeriod },
                xhrFields: {
                    responseType: 'blob' //binary large object -- to handle binary response
                },
                success: function (data, status, xhr) {
                    let filename = "Ordersfront.xlsx";

                    let disposition = xhr.getResponseHeader('Content-Disposition');
                    @* console.log("disp", disposition); *@
                        if (disposition && disposition.indexOf('attachment') !== -1) {
                        let matches = /filename[^;=\n]*=((['"]).*?\2|[^;\n]*)/.exec(disposition); //ExportOrderDataToExcel filename From disposition
                        if (matches && matches[1]) {
                            filename = matches[1].replace(/['"]/g, ''); // Remove quotes if present
                        }
                    }

                    let blob = new Blob([data], { type: xhr.getResponseHeader('Content-Type') });
                    let link = document.createElement('a');
                    link.href = window.URL.createObjectURL(blob); //timePeriod url points to blob obj
                    link.download = filename; //Download file name
                    document.body.appendChild(link); //appendChild so that it Cancelled be cliked
                    link.click();
                    document.body.removeChild(link);

                    console.log("Export Successfully");
                }
            });
        }

        //download orderdetails (pdf)
        function ExportToPdf(tag) {
            var orderid = tag.getAttribute("data-orderid");
            console.log(orderid);
            $.ajax({
                url: `/Order/GeneratePdf?orderid=${orderid}`,
                type: "GET",
                xhrFields: {
                    responseType: 'blob' //binary large object -- to handle binary response
                },
                success: function (data, status, xhr) {
                    let filename = "invoicefront.pdf";

                    let disposition = xhr.getResponseHeader('Content-Disposition');
                    @* console.log("disp", disposition); *@
                        if (disposition && disposition.indexOf('attachment') !== -1) {
                        let matches = /filename[^;=\n]*=((['"]).*?\2|[^;\n]*)/.exec(disposition); //ExportOrderDataToExcel filename From disposition
                        if (matches && matches[1]) {
                            filename = matches[1].replace(/['"]/g, ''); // Remove quotes if present
                        }
                    }

                    let blob = new Blob([data], { type: xhr.getResponseHeader('Content-Type') });
                    let link = document.createElement('a');
                    link.href = window.URL.createObjectURL(blob); //timePeriod url points to blob obj
                    link.download = filename; //Download file name
                    document.body.appendChild(link); //appendChild so that it Cancelled be cliked
                    link.click();
                    document.body.removeChild(link);

                    console.log("Export Successfully");
                }
            });
        }

        @* function ExportPdfJs(tag){
              var orderid = tag.getAttribute("data-orderid");
              console.log(typeof html2pdf);
              console.log(orderid)
                $.ajax({
                url: `/Order/GeneratePdfJs?orderid=${orderid}`,
                type: "GET",
               
                success: function (data) {
                    html2pdf().from(data).save();
                }
            });
        } *@

        //pagination load partial view
        function loadTableForOrders(page = 1, search = "", sortColumn = "", sortDirection = "asc", pageSize = 5, status = "", timePeriod = "", startDate = "", endDate = "") {
            $.ajax({
                url: "/Order/PaginatedOrdersData",
                type: "GET",
                data: { search, sortColumn, sortDirection, pageNumber: page, pageSize, status, timePeriod, startDate, endDate },
                success: function (data) {
                    $("#TableBody").html(data);
                    currentPage = page;

                    pageSize = parseInt(pageSize);
                    var totalRecords = parseInt($("#totalCount").val()) || 0;
                    var startItem = totalRecords === 0 ? 0 : (currentPage - 1) * pageSize + 1;
                    var endItem = Math.min(currentPage * pageSize, totalRecords);

                    $("#pagination-text").text("Showing " + startItem + " - " + endItem + " of " + totalRecords);
                    $("#left-arrow").prop("disabled", page === 1);
                    $("#right-arrow").prop("disabled", page * pageSize >= totalRecords);
                }
            });
        }


        $(document).ready(function () {
            let currentPage = 1;
            let pageSize = $("#itemsperpage").val();
            let searchText = "";
            let sortColumn = "";
            let sortDirection = "asc";
            let startDate;
            let endDate;
            let timePeriod = $("#timePeriod").val();
            let status = $("#status").val();

            // Search on keyup
            $("#searchbtn").on("keyup", function () {
                searchText = $(this).val().trim();
                currentPage = 1;
                loadTableForOrders(currentPage, searchText, sortColumn, sortDirection, pageSize, status, timePeriod, startDate, endDate);
            });

            // Sorting functionality
            $("#sort-orderId").on("click", function () {
                sortColumn = $(this).data("column");
                console.log(sortColumn);
                sortDirection = $(this).attr("data-direction") === "asc" ? "desc" : "asc";
                $(this).attr("data-direction", sortDirection);
                loadTableForOrders(currentPage, searchText, sortColumn, sortDirection, pageSize, status, timePeriod, startDate, endDate);
            });
            $("#sort-date").on("click", function () {
                sortColumn = $(this).data("column");
                console.log(sortColumn);
                sortDirection = $(this).attr("data-direction") === "asc" ? "desc" : "asc";
                $(this).attr("data-direction", sortDirection);
                loadTableForOrders(currentPage, searchText, sortColumn, sortDirection, pageSize, status, timePeriod, startDate, endDate);
            });
            $("#sort-customer").on("click", function () {
                sortColumn = $(this).data("column");
                console.log(sortColumn);
                sortDirection = $(this).attr("data-direction") === "asc" ? "desc" : "asc";
                $(this).attr("data-direction", sortDirection);
                loadTableForOrders(currentPage, searchText, sortColumn, sortDirection, pageSize, status, timePeriod, startDate, endDate);
            });

            $("#sort-amount").on("click", function () {
                sortColumn = $(this).data("column");
                console.log(sortColumn);
                sortDirection = $(this).attr("data-direction") === "asc" ? "desc" : "asc";
                $(this).attr("data-direction", sortDirection);
                loadTableForOrders(currentPage, searchText, sortColumn, sortDirection, pageSize, status, timePeriod, startDate, endDate);
            });

            // Pagination buttons
            $("#right-arrow").on("click", function () {
                let rightarrow = !$(this).prop("disabled");
                console.log(rightarrow);
                if (rightarrow) {
                    currentPage++;
                    loadTableForOrders(currentPage, searchText, sortColumn, sortDirection, pageSize, status, timePeriod, startDate, endDate);
                }
            });

            $("#left-arrow").on("click", function () {
                let leftarrow = !$(this).prop("disabled");
                console.log(leftarrow);
                if (leftarrow) {
                    currentPage--;
                    loadTableForOrders(currentPage, searchText, sortColumn, sortDirection, pageSize, status, timePeriod, startDate, endDate);
                }
            });

            $("#searchfordate").on("click", function () {
                startDate = $("#startDate").val();
                endDate = $("#endDate").val();
                console.log(startDate);
                console.log(endDate);
                loadTableForOrders(currentPage, searchText, sortColumn, sortDirection, pageSize, status, timePeriod, startDate, endDate);
            });

            // Items per page dropdown
            $("#itemsperpage").on("change", function () {
                pageSize = $(this).val();
                console.log(pageSize);
                currentPage = 1;
                loadTableForOrders(currentPage, searchText, sortColumn, sortDirection, pageSize, status, timePeriod, startDate, endDate);
            });

            $("#status").on("change", function () {
                status = $(this).val();
                currentPage = 1;
                loadTableForOrders(currentPage, searchText, sortColumn, sortDirection, pageSize, status, timePeriod, startDate, endDate);
            });

            $("#timePeriod").on("change", function () {
                timePeriod = $(this).val();
                document.getElementById("timePeriod2").value = timePeriod;
                currentPage = 1;
                loadTableForOrders(currentPage, searchText, sortColumn, sortDirection, pageSize, status, timePeriod, startDate, endDate);

            });
            $("#timePeriod2").on("change", function () {
                timePeriod = $(this).val();
                document.getElementById("timePeriod").value = timePeriod;
                currentPage = 1;
                loadTableForOrders(currentPage, searchText, sortColumn, sortDirection, pageSize, status, timePeriod, startDate, endDate);

            });

            $("#clearBtnForDate").on("click", function () {
                startDate = "";
                endDate = "";
                document.getElementById("startDate").value = "";
                document.getElementById("endDate").value = "";
                document.getElementById("timePeriod").value = "All Time";
                document.getElementById("timePeriod2").value = "All Time";
                document.getElementById("status").value = "All Status";
                document.getElementById("searchbtn").value = "";
                currentPage = 1;
                timePeriod = "All Time";
                status = "All Status";
                searchText = "";
                loadTableForOrders(currentPage, searchText, sortColumn, sortDirection, pageSize, status, timePeriod, startDate, endDate);
            });





            // Initial table load
            loadTableForOrders();
        });
    </script>
   
}