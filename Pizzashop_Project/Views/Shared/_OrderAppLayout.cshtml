@using DAL.ViewModels
@using Microsoft.AspNetCore.Authorization
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@inject Microsoft.AspNetCore.Authorization.IAuthorizationService AuthorizationService;
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor;
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - PizzaSshop_Project</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.3.0/font/bootstrap-icons.css" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/PizzaSshop_Project.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css"
        integrity="sha512-Evv84Mr4kqVGRNSgIGL/F/aIDqQb7xQ2vcrdIwxfjThSH8CSR7PBEakCr51Ck+w+/U6swU2Im1vVX0SVk9ABhg=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />
</head>

<body>
    <div class="container-fluid">
        <div class="row">

            <!-- rightside  -->
            <div class="right-side-main-div ">
                <div class="row">
                    <!-- navbar -->
                    <div class="header-line bg-primary d-flex justify-content-between" style="z-index: 6;">
                        <div class="left-elements d-flex">
                            <!-- logo text-->
                            <div class="logo-main-div d-flex  mt-2 mb-2 ">
                                <div class="logo-image bg-white  me-2 d-flex">
                                    <img src="~/images/logos/pizzashop_logo.png" width="50px" alt="">

                                </div>
                                <div class="logo-text text-white fs-5 mt-2 fw-semibold d-none d-sm-block">PIZZASHOP
                                </div>
                            </div>
                        </div>



                        <!-- profile -->
                        <div class="profilepic-div d-flex  mt-2 mb-2 ">
                            @if ((await AuthorizationService.AuthorizeAsync(User, "AccountManagerRole")).Succeeded)
                            {
                                <div class="orderAppMenu d-md-flex d-none align-items-center justify-content-between me-3">
                                    <a asp-action="OrderAppKOT" asp-controller="OrderAppKOT"
                                        class="btn btn-primary text-white border  rounded-pill p-1 px-3 me-2 @((ViewData["orderApp-Active"] as string) == "KOT" ? "orderApp-active-div" : "")"><i
                                            class="fa-solid fa-clipboard me-1"></i>KOT</a>
                                    <a asp-action="OrderAppWaitingList" asp-controller="OrderAppWaitingList"
                                        class="btn btn-primary text-white border  rounded-pill p-1 px-3 me-2 @((ViewData["orderApp-Active"] as string) == "WaitingList" ? "orderApp-active-div" : "")"><i
                                            class="fa-solid fa-clock me-1"></i>Waiting List</a>
                                    <a asp-action="OrderAppTable" asp-controller="OrderAppTable"
                                        class="btn btn-primary text-white border  rounded-pill p-1 px-3 me-2 @((ViewData["orderApp-Active"] as string) == "Table" ? "orderApp-active-div" : "")"><i
                                            class="fa-solid fa-table me-1"></i>Tables</a>
                                    <a asp-action="OrderAppMenu" asp-controller="OrderAppMenu"
                                        class="btn btn-primary text-white border  rounded-pill p-1 px-3 me-2 @((ViewData["orderApp-Active"] as string) == "Menu" ? "orderApp-active-div" : "")"><i
                                            class="fa-solid fa-burger me-1"></i>Menu</a>
                                </div>
                                <div class="dropdown-start mt-1 d-md-none d-block">
                                    <div class="dropdown-toggle d-flex align-items-center btn btn-primary text-white border  rounded-pill p-1 px-3 me-2"
                                        type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown"
                                        aria-expanded="false">
                                        @* <img src="~/images/logos/pizzashop_logo.png" width="50px" alt=""> *@
                                        <a class="d-flex align-items-center  text-white text-nowrap text-decoration-none"><i
                                                class="fa-solid @ViewData["orderAppDDIcon"] me-1"></i>@ViewData["orderApp-Active"]</a>
                                    </div>

                                    <div class="orderAppMenu  align-items-center justify-content-between me-3 dropdown-menu"
                                        aria-labelledby="dropdownMenuButton1">
                                        <a asp-action="OrderAppKOT" asp-controller="OrderAppKOT"
                                            class="d-flex align-items-center justify-content-start text-dark fw-semibold p-2 ms-2 me-2 text-nowrap text-decoration-none  @((ViewData["orderApp-Active"] as string) == "KOT" ? "orderApp-active-div" : "")"><i
                                                class="fa-solid fa-clipboard me-1"></i>KOT</a>
                                        <a asp-action="OrderAppWaitingList" asp-controller="OrderAppWaitingList"
                                            class="d-flex align-items-center justify-content-start text-dark fw-semibold p-2 ms-2 me-2 text-nowrap text-decoration-none  @((ViewData["orderApp-Active"] as string) == "WaitingList" ? "orderApp-active-div" : "")"><i
                                                class="fa-solid fa-clock me-1"></i>Waiting List</a>
                                        <a asp-action="OrderAppTable" asp-controller="OrderAppTable" id="TableButtonLayout"
                                            class="d-flex align-items-center justify-content-start text-dark fw-semibold p-2 ms-2 me-2 text-nowrap text-decoration-none  @((ViewData["orderApp-Active"] as string) == "Table" ? "orderApp-active-div" : "")"><i
                                                class="fa-solid fa-table me-1"></i>Tables</a>
                                        <a asp-action="OrderAppMenu" asp-controller="OrderAppMenu" id="MenuButtonLayout"
                                            class="d-flex align-items-center justify-content-start text-dark fw-semibold p-2 ms-2 me-2 text-nowrap text-decoration-none  @((ViewData["orderApp-Active"] as string) == "Menu" ? "orderApp-active-div" : "")"><i
                                                class="fa-solid fa-burger me-1"></i>Menu</a>
                                    </div>

                                </div>
                            }
                            @if ((await AuthorizationService.AuthorizeAsync(User, "ChefRole")).Succeeded)
                            {
                                <div class="orderAppMenu align-items-center justify-content-between me-3 mt-1">
                                    <a asp-action="OrderAppKOT" asp-controller="OrderAppKOT"
                                        class="btn btn-primary text-white border  rounded-pill p-1 px-3 me-2 @((ViewData["orderApp-Active"] as string) == "KOT" ? "orderApp-active-div" : "")"><i
                                            class="fa-solid fa-clipboard me-1"></i>KOT</a>
                                </div>
                            }


                            <!-- profile-->
                            <div class="dropdown mt-1">
                                <div class=" dropdown-toggle" type="button" id="dropdownMenuButton1"
                                    data-bs-toggle="dropdown" aria-expanded="false">
                                    <img src="@(HttpContextAccessor.HttpContext.Request.Cookies["ProfileImage"])"
                                        style="border-radius: 50%;" width="40px" height="35px" alt="">
                                </div>
                                <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                                    <li>
                                        <div class="dropdown-item"><img
                                                src="@(HttpContextAccessor.HttpContext.Request.Cookies["ProfileImage"])"
                                                style="border-radius: 50%;" width="30px" height="25px" alt="">
                                            @(HttpContextAccessor.HttpContext.Request.Cookies["username"])</div>
                                    </li>
                                    <li><a class="dropdown-item" asp-action="ProfilePage" asp-controller="OrderApp">My
                                            Profile</a></li>
                                    <li><a class="dropdown-item" asp-action="ChangePasswordOrderApp"
                                            asp-controller="OrderApp">Change Password</a></li>
                                    <li><a class="dropdown-item" data-bs-toggle="modal"
                                            data-bs-target="#logout">Logout</a></li>
                                    @if ((await AuthorizationService.AuthorizeAsync(User,
                                                                        "AccountManagerRole")).Succeeded)
                                    {
                                        <li><a class="dropdown-item" asp-action="Dashboard" asp-controller="User">Exit
                                                OrderApp</a></li>
                                    }
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="container ps-lg-5  pe-lg-5 pe-md-4 ps-md-4 pt-3 pb-3">

                        @RenderBody()
                    </div>
                </div>
            </div>
        </div>
    </div>
    </div>



    <!---------------------- modal logout ------------------->
    <div id="logout" class="modal" tabindex="-1">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                @* <div class="modal-header">
                    <h5 class="modal-title">Delete Conformation</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div> *@
                <div class="modal-body ">
                    <div class="delete-cat-image d-flex flex-column  align-items-center">
                        <img src="../images/toppng.com-warning-icon-2400x2400.png" width="50px" alt="">
                        <p>Are you sure you want to Logout?</p>
                    </div>

                </div>
                <div class="modal-footer d-flex justify-content-center">
                    <a type="submit" asp-action="Logout" asp-controller="User" class="btn btn-primary">Yes</a>
                    <button type="button" class="btn btn-outline-primary" data-bs-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>


    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

    @await RenderSectionAsync("Scripts", required: false)
</body>

<script>
    $(document).ready(function () {
        var successMessage = '@TempData["SuccessMessage"]';
        var errorMessage = '@TempData["ErrorMessage"]';
        toastr.options = {
            "closeButton": true,
            "progressBar": true,
            "timeOut": "2000"
        };
        console.log("successMessage", successMessage);
        if (successMessage) {
            toastr.success(successMessage);
        }
        if (errorMessage) {
            toastr.error(errorMessage);
        }
    });

    function AjaxResponseHandle(response) {
        var parser = new DOMParser();
        var doc = parser.parseFromString(response, 'text/html');
        var title = doc.title;
        console.log(title)
        if (title === "Login - PizzaSshop_Project") {
            window.location.href = '@Url.Action("VerifyPassword", "UserLogin")';
        } else if (title === "Dashboard - PizzaSshop_Project") {
            window.location.href = '@Url.Action("Dashboard", "User")';
        }
        else if (title === "InternalServerError" || title === "Forbidden" || title === "Unauthorize" || title === "pageNotFoundError") {
            var url = `/ErrorPage/${title}`;
            window.location.href = url;
        }
        else if (title === "InternalServerError - PizzaSshop_Project" || title === "Forbidden - PizzaSshop_Project" || title === "Unauthorize - PizzaSshop_Project" || title === "pageNotFoundError - PizzaSshop_Project") {
            var url = `/ErrorPage/${title.split(" ")[0].toString().trim()}`;
            window.location.href = url;
        }
        else {
            errorToaster('Unexpected response format.');
        }
    }

    function IsHtmlDoc(response) {
        if (response.statusCode) {
            return;
        }
        if ((response.trim().indexOf('<!DOCTYPE html>') === 0) || (response.trim().indexOf('<html>') === 0)) {
            AjaxResponseHandle(response);
            console.log("in")
        }
    }

    $(document).ready(function () {
        // 1. Show toaster if TempData contains error (normal request)

        // 2. Global AJAX error catcher
        $(document).ajaxComplete(function (event, xhr, settings) {
            @* console.log("hiiefszvsdvsd", xhr.getResponseHeader("X-Error")) *@
            if (xhr.getResponseHeader("X-Error") == "true") {
                const response = xhr.responseJSON;
                if (response && response.error) {
                    toastr.error(response.error);
                } else {
                    toastr.error('An unexpected error occurred.');
                }
            }
        });

    });
</script>

</html>
