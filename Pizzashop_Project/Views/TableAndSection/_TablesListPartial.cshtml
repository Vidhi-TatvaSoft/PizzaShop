@using DAL.ViewModels;
@using Microsoft.AspNetCore.Authorization
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@inject Microsoft.AspNetCore.Authorization.IAuthorizationService AuthorizationService;
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor;
@model PaginationViewModel<TableViewModel>

@* @{bool ismassdelete = false;} *@
@if (Model.Items.Count == 0)
{
    <tr>
        <td colspan="6" class="text-center text-danger fw-bold">No Data Found</td>
    </tr>
}
else
{
    @foreach (var item in Model.Items)
    {
        <tr>
            <td class=" text-start text-nowrap align-content-center"><input type="checkbox" class="massDeleteClassforSection"
                    data-checkid="@item.TableId" class="me-3" onclick="checkboxTickManage()">
                <span class="ms-3 ">@item.TableName</span>
            </td>
            <td class="text-center">@item.Capacity</td>
            <td class="text-center d-flex justify-content-center">
                <div>
                    @if (item.Status == "Available")
                    {
                        <div class="text-center text-white bg-success rounded-pill p-lg-1  p-1"
                            style="max-width: fit-content; font-size: 14px;">
                            Available</div>
                    }
                    else
                    {

                        <div class="text-center text-white bg-secondary rounded-pill  p-lg-1 p-1"
                            style="max-width: fit-content; font-size: 14px;">
                            Occupied</div>
                    }

                </div>
            </td>
            <td class="text-center">
                @if ((await AuthorizationService.AuthorizeAsync(User, "TableSection.Delete")).Succeeded)
                {
                    <i class="fa-solid fa-pen w-25 me-sm-2 me-xs-2 me-lg-0" id="EditTableBtnId" data-id="@item.TableId"
                        onclick="updateTableDetails(this);RemoveValidatoOnCancel()" data-bs-toggle="modal"
                        data-bs-target="#EditTableModal"></i>
                    <i class="fa-solid fa-trash-can" data-bs-toggle="modal" data-bs-target="#DeleteTableModal"
                        data-id="@item.TableId" onclick="DeleteTableDetails(this)"></i>
                }
                else if ((await AuthorizationService.AuthorizeAsync(User, "TableSection.EditAdd")).Succeeded)
                {
                    <i class="fa-solid fa-pen w-25 me-sm-2 me-xs-2 me-lg-0" id="EditTableBtnId" data-id="@item.TableId"
                        onclick="updateTableDetails(this);RemoveValidatoOnCancel()" data-bs-toggle="modal"
                        data-bs-target="#EditTableModal"></i>
                    <i class="fa-solid fa-trash-can text-black-50"></i>
                }
                else
                {
                    <i class="fa-solid fa-pen text-black-50 me-3 mt-2"></i>
                    <i class="fa-solid fa-trash-can text-black-50"></i>
                }
            </td>
        </tr>
    }
}
<input type="hidden" value="@Model.TotalCount" id="totalCount">