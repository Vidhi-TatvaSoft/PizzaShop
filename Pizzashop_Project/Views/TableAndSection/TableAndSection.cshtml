@model DAL.ViewModels.TableSectionViewModel;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="categories-main-div container-fluid ">
    <div class="row ms-2 me-2 ">
        <div class="fs-2 text-primary fw-bold mt-4 ">Table And Section</div>
        <div class="row ">
            <div
                class="left-sidebar-category-main-div bg-light mt-2 pt-0 col-12 col-sm-12 col-md-4 col-lg-3 col-xl-2 d-flex justify-content-md-start justify-content-center ">

                <div class=" w-100 justify-content-center">

                    <!-- logo -->
                    <div class="logo-main-div d-flex justify-content-between mb-3">

                        <div class="logo-text text-primary fs-5 mt-2  ms-1 fw-semibold">
                            Section
                        </div>
                        <div class="logo-image ">
                            <i class="fa-regular fa-square-plus fs-4 text-primary mt-3" data-bs-toggle="modal"
                                data-bs-target="#AddSectionModal" onclick="EmptyAddSectionForm()"></i>
                        </div>
                    </div>
                    <div id="SectionPartialViewId">

                    </div>

                    @* @foreach (var sections in Model.sectionList)
                        {
                            <div class="Sections-div d-flex justify-content-between text-dark col-md-12 col-6  p-1 @(ViewBag.selectedSection==sections.SectionId ? "active-category" : "")"
                                data-id="@sections.SectionId">

                                <div class="d-flex ">   
                                    <i class="fa-solid fa-receipt mt-1 "></i>
                                    <p class="text-size-set mt-0  m-0 ms-3 ">@sections.SectionName</p>

                                </div>
                                <div>
                                    <input type="hidden" value="@sections.Description">
                                    <i class="fa-solid fa-pen fs-6 iconeditdelete" onclick="UpdatesectionDetails(this)"
                                        data-id="@sections.SectionId" data-bs-toggle="modal" data-bs-target="#EditSectionModal" ></i>
                                    <i class="fa-solid fa-trash-can iconeditdelete fs-6  ms-1" data-bs-toggle="modal" onclick="DeleteSectionDetails(this)"
                                        data-bs-target="#DeleteSectionModal" data-id="@sections.SectionId"
                                        ></i>
                                </div>

                            </div>
                        } *@


                </div>
            </div>

            <div class=" right-side-table-div bg-white mt-2 pt-0 com-sm-12 col-md-8 col-lg-9 col-xl-10 col-12 ">
                <div class="item-list-main-div  d-lg-flex justify-content-between mt-2">
                    <!-- item txt -->
                    <div class="item-div d-flex col-md-3">
                        <div class="item-text fs-3 fw-bold text-primary">Tables</div>
                    </div>

                    <!-- search add Table -->
                    <div class="search-item-div d-flex  align-items-center justify-content-between mt-2">
                        <div class="search-button ">
                            @if (Model.TableList.Items.Count != 0)
                            {
                                <input type="hidden" id="section-id-div" value="@Model.TableList.Items[0].SectionId">
                                <input type="text" id="searchbtn" placeholder="Search" class="p-1 border ">
                                <i class="fa-solid fa-magnifying-glass search-icon-style "></i>
                            }
                        </div>
                        <div class="discard-button">
                            <a href="#" class="btn  p-1 ps-2 pe-2 ms-3 border" data-bs-toggle="modal"
                                data-bs-target="#DeleteAllTableModal"><i class="fa-solid fa-trash-can "></i></a>

                        </div>
                        <div class="additem-button">
                            <button class="btn btn-primary text-light p-2 ms-3 border text" data-bs-toggle="modal"
                                data-bs-target="#AddTableModal" onclick="EmptyAddTableForm()">+ Add Table</button>

                        </div>

                    </div>
                </div>
                <div class="table-main-div table-responsive mt-3 bg-white mx-auto w-100 ">
                    @if (Model.TableList.Items.Count == 0)
                    {
                        <h3 class="d-flex justify-content-center align-items-center text-danger">No data found</h3>
                    }
                    else
                    {
                        <table class="table" id="demo1">
                            <thead>
                                <tr>
                                    <th scope="col" class="text-start"><input type="checkbox"
                                            id="checkboxForSelectAllSection" onclick="SelectAllSection()" class="me-3">
                                        Name</th>
                                    <th scope="col" class="text-center">Capacity</th>
                                    <th scope="col" class="text-center">Status</th>
                                    <th scope="col" class="text-center">Action </th>
                                </tr>
                            </thead>
                            <tbody id="TableListBody" style="white-space: nowrap; ">

                                @await Html.PartialAsync("_TablesListPartial", Model.TableList)

                            </tbody>
                        </table>
                    }
                    @*  Pagination div *@
                    <div class="pagination-main-div d-flex justify-content-end gap-2 p-3 pt-0 bg-white ">

                        @if (Model.TableList.Items.Count != 0)
                        {
                            <span class="mt-2">Items Per page:</span>

                            <select id="itemsperpage">
                                <option value="5">5</option>
                                <option value="10">10</option>
                                <option value="15">15</option>
                            </select>

                            <span class=" mt-2 ms-1" id="pagination-text"></span>
                            <a id="left-arrow" class="btn border border-dark bg-light ms-2">&lt;</a>
                            <a id="right-arrow" class="btn border border-dark bg-light ms-2">&gt;</a>
                        }
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>




<!------------------ modals ---------------------------------------->
<!-- add Section modal -->
<div id="AddSectionModal" class="modal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add Section</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="EmptyAddSectionForm()"></button>
            </div>
            <form id="AddSectionFormId">
                <div class="modal-body">
                    <div class="form-floating mb-3">
                        <input type="text" class="form-control" id="SectionName" asp-for="@Model.Section.SectionName"
                            placeholder="name" required>
                        <span asp-validation-for="@Model.Section.SectionName" class="text-danger RemoveValidations" ></span>
                        <label for="SectionName">Name</label>
                    </div>
                    <div class="form-floating">
                        <textarea class="form-control" placeholder="Leave a comment here"
                            asp-for="@Model.Section.Description" id="sectionDescription"></textarea>
                        <label for="sectionDescription">Description</label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-primary">save</button>
                    <button type="button" class="btn btn-outline-primary" data-bs-dismiss="modal" onclick="EmptyAddSectionForm()">cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Section modal -->
<div id="EditSectionModal" class="modal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Section</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="EmptyAddTableForm()"></button>
            </div>
            <form id="EditSectionFormId">
                <div class="modal-body">
                    <div class="form-floating mb-3">
                        <input type="hidden" asp-for="@Model.Section.SectionId" id="section-id">
                        <input type="text" class="form-control" id="section-name" asp-for="@Model.Section.SectionName"
                            placeholder="name" required>
                        <span asp-validation-for="@Model.Section.SectionName" class="text-danger RemoveValidations"></span>
                        <label for="section-name">Name</label>
                    </div>
                    <div class="form-floating">
                        <textarea class="form-control" placeholder="Leave a comment here"
                            asp-for="@Model.Section.Description" id="section-description"></textarea>
                        <label for="section-description">Description</label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" id="updatebtn" class="btn btn-primary">save</button>
                    <button type="button" class="btn btn-outline-primary" data-bs-dismiss="modal" onclick="EmptyAddTableForm()">cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- delete Section -->
<div id="DeleteSectionModal" class="modal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete Conformation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body ">
                <div class="delete-cat-image d-flex flex-column  align-items-center">
                    <img src="images/toppng.com-warning-icon-2400x2400.png" width="50px" alt="">
                    <p>Are you sure you want to delete this Section?</p>
                </div>
            </div>
            <form id="DeletesectionFormId">
                <input type="hidden" asp-for="@Model.Section.SectionId" id="section-id-fordeletesection" name="id">
                <div class="modal-footer d-flex justify-content-center">
                    <button type="submit" class="btn btn-primary">Yes</button>
                    <button type="button" class="btn btn-outline-primary" data-bs-dismiss="modal">No</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!--Add Table modal-->
<div id="AddTableModal" class="modal fae" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Add table @ViewBag.sectionID</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="EmptyAddTableForm()"></button>
            </div>
            <form id="AddTableFormId">
                <div class="modal-body row">
                    <div class="col-6 mx-auto">
                        <div class="form-floating">
                            <input type="text" id="TableName" asp-for="@Model.table.TableName" class="form-control"
                                placeholder="Name*">
                            <label for="TableName">Name*</label>
                            <span class="text-danger RemoveValidations" asp-validation-for="@Model.table.TableName" ></span>
                        </div>
                    </div>
                    <div class="col-6 mx-auto">
                        <div class="form-floating">
                            <select asp-for="@Model.table.SectionId" class="form-control" id="AddTableModaldropDown">
                                @foreach (var items in Model.sectionList)
                                {
                                    <option value="@items.SectionId" class="DemoDDL">@items.SectionName</option>

                                }
                                @* <option value="1" class="DemoDDL">Section1</option>
                                        <option value="3" class="DemoDDL">Section2</option> *@
                            </select>
                            <label for="AddTableModaldropDown">Section</label>
                            @* <span class="text-danger" asp-validation-for="@Model.table.SectionId" class="RemoveValidations"></span> *@
                        </div>
                    </div>

                    <div class="col-6 mx-auto mt-4">
                        <div class="form-floating">
                            <input type="text" id="TableCapacity" asp-for="@Model.table.Capacity" class="form-control"
                                placeholder="capacity">
                            <label for="TableCapacity">Capacity*</label>
                            <span class="text-danger RemoveValidations" asp-validation-for="@Model.table.Capacity" ></span>
                        </div>
                    </div>
                    <div class="col-6 mx-auto mt-4">
                        <div class="form-floating">
                            <select asp-for="@Model.table.Status" class="form-control" id="tableStatus">
                                <option value="Available">Available</option>
                                <option value="Occupied">Occupied</option>
                            </select>
                            <label for="tableStatus">Status</label>
                            @* <span class="text-danger" asp-validation-for="@Model.table.Status" class="RemoveValidations"></span> *@
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="submit" class="btn btn-primary" value="Save">
                    <button type="button" class="btn btn-outline-primary" data-bs-dismiss="modal" onclick="EmptyAddTableForm()">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!--Edit Table modal-->
<div id="EditTableModal" class="modal fae" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Edit table @ViewBag.sectionID</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="EmptyAddTableForm()"></button>
            </div>
            <form id="EditTableFormId">
                <div class="modal-body row">
                    <div class="col-6 mx-auto">
                        <div class="form-floating">
                            <input type="hidden" asp-for="@Model.table.TableId" id="TableIdForEdit">
                            <input type="text" id="TableNameEdit" asp-for="@Model.table.TableName" class="form-control"
                                placeholder="Name*">
                            <label for="TableNameEdit">Name*</label>
                            <span class="text-danger RemoveValidations" asp-validation-for="@Model.table.TableName"></span>
                        </div>
                    </div>
                    <div class="col-6 mx-auto">
                        <div class="form-floating">
                            <select asp-for="@Model.table.SectionId" class="form-control" id="EditTableModaldropDown">
                                @foreach (var items in Model.sectionList)
                                {
                                    <option value="@items.SectionId">@items.SectionName</option>

                                }
                                @* <option value="1" class="DemoDDL">Section1</option>
                                        <option value="3" class="DemoDDL">Section2</option> *@
                            </select>
                            <label for="EditTableModaldropDown">Section</label>
                            <span class="text-danger RemoveValidations" asp-validation-for="@Model.table.SectionId"></span>
                        </div>
                    </div>

                    <div class="col-6 mx-auto mt-4">
                        <div class="form-floating">
                            <input type="text" id="TableCapacityForEdit" asp-for="@Model.table.Capacity"
                                class="form-control" placeholder="capacity">
                            <label for="TableCapacityForEdit">Capacity*</label>
                            <span class="text-danger" asp-validation-for="@Model.table.Capacity"></span>
                        </div>
                    </div>
                    <div class="col-6 mx-auto mt-4">
                        <div class="form-floating">
                            <select asp-for="@Model.table.Status" class="form-control" id="tableStatusForEdit">
                                <option value="Available">Available</option>
                                <option value="Occupied">Occupied</option>
                            </select>
                            <label for="tableStatusForEdit">Status</label>
                            <span class="text-danger" asp-validation-for="@Model.table.Status"></span>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <input type="submit" class="btn btn-primary" value="Save">
                    <button type="button" class="btn btn-outline-primary" data-bs-dismiss="modal" onclick="EmptyAddTableForm()">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- delete Table -->
<div id="DeleteTableModal" class="modal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete Conformation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body ">
                <div class="delete-cat-image d-flex flex-column  align-items-center">
                    <img src="images/toppng.com-warning-icon-2400x2400.png" width="50px" alt="">
                    <p>Are you sure you want to delete this Table?</p>
                </div>
            </div>
            <form id="DeleteTableFormId">
                <input type="hidden" asp-for="@Model.table.TableId" id="table-id-fordeleteTable" name="id">
                <div class="modal-footer d-flex justify-content-center">
                    <button type="submit" class="btn btn-primary">Yes</button>
                    <button type="button" class="btn btn-outline-primary" data-bs-dismiss="modal">No</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- delete selected all Table -->
<div id="DeleteAllTableModal" class="modal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete Conformation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body ">
                <div class="delete-cat-image d-flex flex-column  align-items-center">
                    <img src="images/toppng.com-warning-icon-2400x2400.png" width="50px" alt="">
                    <p>Are you sure you want to delete these Tables?</p>
                </div>
            </div>
            @* <input type="hidden" asp-for="@Model.table.TableId" id="table-id-fordeleteTable" name="id"> *@
            <div class="modal-footer d-flex justify-content-center">
                <button type="submit" class="btn btn-primary" id="deleteAllTablesModalYesButton"
                    data-bs-dismiss="modal">Yes</button>
                <button type="button" class="btn btn-outline-primary" data-bs-dismiss="modal">No</button>
            </div>

        </div>
    </div>
</div>

@section scripts {
    <Script>
        let currentPage = 1;
        let pageSize = $("#itemsperpage").val();
        let searchText = "";
        let SectionID = $("#section-id-div").val();

        function loadSection() {
            @* let SectionIDforbhai = $("#section-id-div").val(); *@
            $.ajax({
                url: "/TableAndSection/SectionList",
                type: "GET",
                success: function (data) {
                    @* console.log(data); *@    
                        console.log("section ajax call");
                    $("#SectionPartialViewId").html(data);
                    @* loadSectionTable(SectionIDforbhai, searchText, currentPage, pageSize); *@
                }
            });
        }

        function loadSectionTable(SectionID, search = "", page = 1, pageSize = 5) {

            console.log("functiocall")
            $.ajax({
                url: "/TableAndSection/TablePagination",
                type: "GET",
                data: { SectionID, search, pageNumber: page, pageSize },
                success: function (data) {
                    console.log("ajax call");
                    $("#TableListBody").html(data);
                    currentPage = page;
                    pageSize = parseInt(pageSize);
                    var totalRecords = parseInt($("#totalCount").val()) || 0;
                    var startItem = totalRecords === 0 ? 0 : (currentPage - 1) * pageSize + 1;
                    var endItem = Math.min(currentPage * pageSize, totalRecords);

                    $("#pagination-text").text("Showing " + startItem + " - " + endItem + " of " + totalRecords);
                    $("#left-arrow").prop("disabled", currentPage === 1);
                    $("#right-arrow").prop("disabled", currentPage * pageSize >= totalRecords);
                    $("#checkboxForSelectAllSection").prop("checked", false);
                    document.getElementById("AddTableModaldropDown").value = SectionID.toString();

                },
                error: function (data) {
                    console.log("error");
                    console.log(data);
                }
            });
        }

        function UpdatesectionDetails(tag) {
            document.getElementById("section-id").value = tag.getAttribute("data-id");
            document.getElementById("section-name").value = tag.parentElement.parentElement.children[0].children[1].innerHTML;
            document.getElementById("section-description").value = tag.parentElement.children[0].value;
        }

        function DeleteSectionDetails(tag) {
            document.getElementById("section-id-fordeletesection").value = tag.getAttribute("data-id");
        }

        function DeleteTableDetails(tag) {
            document.getElementById("table-id-fordeleteTable").value = tag.getAttribute("data-id");
        }

        function updateTableDetails(tag) {
            document.getElementById("TableIdForEdit").value = tag.getAttribute("data-id");
            document.getElementById("TableNameEdit").value = tag.parentElement.parentElement.children[0].children[1].innerHTML;
            document.getElementById("EditTableModaldropDown").value = SectionID.toString();
            document.getElementById("TableCapacityForEdit").value = tag.parentElement.parentElement.children[1].innerHTML;
            document.getElementById("tableStatusForEdit").value = tag.parentElement.parentElement.children[2].children[0].children[0].innerHTML.trim();
        }



        function SelectAllSection() {
            var classess = document.getElementsByClassName("massDeleteClassforSection");
            var deleteAllItemCkeckbboxId = document.getElementById("checkboxForSelectAllSection");
            console.log(classess)

            if (deleteAllItemCkeckbboxId.checked) {
                for (i = 0; i < classess.length; i++) {
                    classess[i].checked = true;;
                }
            }
            if (!deleteAllItemCkeckbboxId.checked) {
                for (i = 0; i < classess.length; i++) {
                    classess[i].checked = false;;
                }
            }

        }
        function checkboxTickManage() {
            var classess = document.getElementsByClassName("massDeleteClassforSection");
            var deleteAllItemCkeckbboxId = document.getElementById("checkboxForSelectAllSection");
            flag = true;
            for (i = 0; i < classess.length; i++) {
                if (!classess[i].checked) {
                    flag = false;
                }
            }
            deleteAllItemCkeckbboxId.checked = flag;
        }

        function EmptyAddSectionForm() {
            document.getElementById("SectionName").value = "";
            document.getElementById("sectionDescription").value = "";
            var validatinclass=document.getElementsByClassName("RemoveValidations");
            for (i = 0; i < validatinclass.length; i++) {
                validatinclass[i].innerText = "";
            }
            
        }

        function EmptyAddTableForm() {
            document.getElementById("TableName").value = "";
            document.getElementById("TableCapacity").value = "";
            var validatinclass=document.getElementsByClassName("RemoveValidations");
            for (i = 0; i < validatinclass.length; i++) {
                validatinclass[i].innerText = "";
            }

        }

        function RemoveValidatoOnCancel(){
            var classList = document.getElementsByClassName("RemoveValidations");
            for (var i = 0; i < classList.length; i++) {
                classList[i].innerText = "";
            }
        }

        $(document).ready(function () {

            loadSection();
            loadSectionTable(SectionID, searchText, currentPage, pageSize);

            $(document).on("click", ".Sections-div", function () {
                $(".Sections-div").removeClass("active-category");
                $(this).addClass("active-category");
                SectionID = $(this).data("id");
                currentPage = 1;
                loadSectionTable(SectionID, searchText, currentPage, pageSize);
                SelectAllSection();

            })

            $("#searchbtn").on("keyup", function () {
                searchText = $(this).val().trim();
                console.log(searchText);
                currentPage = 1;
                loadSectionTable(SectionID, searchText, currentPage, pageSize);
                SelectAllSection();
            });

            $("#right-arrow").on("click", function () {
                let rightarrow = !$(this).prop("disabled");
                console.log(rightarrow);
                if (rightarrow) {
                    currentPage++;
                    loadSectionTable(SectionID, searchText, currentPage, pageSize);
                    SelectAllSection();
                }
            });

            $("#left-arrow").on("click", function () {
                let leftarrow = !$(this).prop("disabled");
                console.log(leftarrow);
                if (leftarrow) {
                    currentPage--;
                    loadSectionTable(SectionID, searchText, currentPage, pageSize);
                    SelectAllSection();
                }
            });
            $("#itemsperpage").on("change", function () {
                pageSize = $(this).val();
                currentPage = 1;
                console.log(pageSize);
                loadSectionTable(SectionID, searchText, currentPage, pageSize);
                SelectAllSection();
            });

            //delete all Tables
            $("#deleteAllTablesModalYesButton").on("click", function () {
                var classess = document.getElementsByClassName("massDeleteClassforSection");
                @* console.log("delete all") *@
                    let toasterflag = true;
                for (i = 0; i < classess.length; i++) {
                    if (classess[i].checked) {

                        let tableID = classess[i].getAttribute("data-checkid");
                        console.log(tableID)
                        $.ajax({
                            url: `/TableAndSection/DeleteTable?id=${tableID}`,
                            type: "GET",
                            success: function (data) {
                                if (data.success && toasterflag) {
                                    successToaster(data.text);
                                    toasterflag = false;
                                }
                                if (data.success == false && toasterflag) {
                                    errorToaster(data.text);
                                    toasterflag = false;
                                }
                                location.reload();
                                currentPage = 1;
                                loadSectionTable(SectionID, searchText, currentPage, pageSize);
                            }
                        })
                    }
                }
            })

            //add section
            $(document).on("submit", "#AddSectionFormId", function (e) {
                e.preventDefault();

                let form = $("#AddSectionFormId");
                if (form.valid()) {
                    let formData = new FormData(this);
                    console.log(formData);
                    $.ajax({
                        url: "/TableAndSection/AddSection",
                        type: "POST",
                        contentType: false,
                        processData: false,
                        data: formData,
                        success: function (res) {
                            if (res.success) {
                                successToaster(res.text);
                            } else {
                                errorToaster(res.text);
                            }
                            $(".btn-close").click();
                            @* console.log(res); *@
                                loadSection();
                            loadSectionTable(SectionID, searchText, currentPage, pageSize);
                            EmptyAddSectionForm();
                        }
                    })
                }
            })

            //Edit section POST
            $(document).on("submit", "#EditSectionFormId", function (e) {
                e.preventDefault();
                let form = $("#EditSectionFormId");
                let SectionIDforEdit = $("#section-id-div").val();

                if (form.valid()) {
                    let formData = new FormData(this);
                    $.ajax({
                        url: "/TableAndSection/EditSection",
                        type: "POST",
                        contentType: false,
                        processData: false,
                        data: formData,
                        success: function (res) {
                            if (res.success) {
                                successToaster(res.text);
                            } else {
                                errorToaster(res.text);
                            }
                            $(".btn-close").click();
                            loadSection();
                            loadSectionTable(SectionIDforEdit, searchText, currentPage, pageSize);
                            }
                    })
                }
            })

            //delete section
            $(document).on("submit", "#DeletesectionFormId", function (e) {
                e.preventDefault();
                let id = document.getElementById("section-id-fordeletesection").value;

                $.ajax({
                    url: `/TableAndSection/DeleteSection?id=${id}`,
                    type: "POST",
                    success: function (res) {
                        if (res.success) {
                            successToaster(res.text);
                        } else {
                            errorToaster(res.text);
                        }
                        $(".btn-close").click();
                        @* console.log(res); *@
                        loadSection();
                            loadSectionTable(res.sectionID, searchText, currentPage, pageSize);
                    }
                });
            })

            //Add Table
            $(document).on("submit", "#AddTableFormId", function (e) {
                e.preventDefault();
                let form = $("#AddTableFormId");
                @* let SectionID = $("#AddTableModaldropDown").val(); *@
                if (form.valid()) {
                    let formData = new FormData(this);
                    $.ajax({
                        url: "/TableAndSection/AddTable",
                        type: "POST",
                        contentType: false,
                        processData: false,
                        data: formData,
                        success: function (res) {
                            if (res.success) {
                                successToaster(res.text);
                            } else {
                                errorToaster(res.text);
                            }
                            $(".btn-close").click();
                            loadSectionTable(SectionID, searchText, currentPage, pageSize);
                            EmptyAddTableForm();
                        }
                    })
                }
            })

            //Edit Table
            $(document).on("submit", "#EditTableFormId", function (e) {
                e.preventDefault();
                let form = $("#EditTableFormId");
                @* let SectionID = $("#EditTableModaldropDown").val(); *@
                if (form.valid()) {
                    let formData = new FormData(this);
                    $.ajax({
                        url: "/TableAndSection/EditTable",
                        type: "POST",
                        contentType: false,
                        processData: false,
                        data: formData,
                        success: function (res) {
                            if (res.success) {
                                successToaster(res.text);
                            } else {
                                errorToaster(res.text);
                            }
                            $(".btn-close").click();
                            loadSectionTable(SectionID, searchText, currentPage, pageSize);
                        }
                    })
                }
            })

            //delete Table
            $(document).on("submit", "#DeleteTableFormId", function (e) {
                e.preventDefault();
                let id = document.getElementById("table-id-fordeleteTable").value;
                $.ajax({
                    url: `/TableAndSection/DeleteTable?id=${id}`,
                    type: "POST",
                    success: function (res) {
                        if (res.success) {
                            successToaster(res.text);
                        } else {
                            errorToaster(res.text);
                        }
                        $(".btn-close").click();
                        currentPage=1;
                        console.log("delete table");
                        loadSectionTable(SectionID, searchText, currentPage, pageSize);
                        console.log(currentPage);
                        console.log(SectionID);
                        console.log("delete table dn")                   
                    }
                });
            })




        });


    </Script>

    <script>
        $(document).ready(function () {
            var successMessage = '@TempData["SuccessMessage"]';
            var errorMessage = '@TempData["ErrorMessage"]';
            toastr.options = {
                "closeButton": true,
                "progressBar": true,
                "timeOut": "2000"
            };
            console.log("successMessage", successMessage);
            if (successMessage) {
                toastr.success(successMessage);
            }
            if (errorMessage) {
                toastr.error(errorMessage);
            }
        });
    </script>
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <partial name="_Toaster" />
}