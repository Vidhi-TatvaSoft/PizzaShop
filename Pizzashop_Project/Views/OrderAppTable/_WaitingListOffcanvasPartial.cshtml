@using DAL.ViewModels;
@model OrderAppTableViewModel

@if (Model.waitinglistdetails.Count == 0)
{
    <div class="offcanvas-header">
        <h5 id="offcanvasRightLabel" class="text-primary fw-bold">Waiting List</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <div class="fs-5">There is no one in waiting</div>
    </div>
}
else
{
    <div class="offcanvas-header">
        <h5 id="offcanvasRightLabel" class="text-primary fw-bold">Waiting List</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <div class="table-responsive">
            <table class="table">
                <thead>
                    <th class="text-center">&nbsp</th>
                    <th class="text-center">ID</th>
                    <th class="text-nowrap text-center">Name</th>
                    <th class="text-center">No. of Person</th>
                </thead>
                <tbody>
                    @foreach (var waiting in Model.waitinglistdetails)
                    {
                        <tr>
                            <td class="text-center"><input type="radio" class="waitingListOffcanvasCheckbox"
                                    id="waitingListCheckbod-@waiting.ID" name="demo"
                                    onclick="FillCustomerDetailsByRadio(@waiting.ID)"></td>
                            <td class="text-center">#@waiting.ID</td>
                            <td class="text-nowrap text-center">@waiting.Name</td>
                            <td class="text-center">@waiting.NoOfPerson</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="customerDetails row">
            <div class="text-primary fs-5 fw-bold mb-3">Customer Details</div>
            <div class="form-floating  col-12 mb-3">
                <input type="text" class="form-control" id="Email" placeholder="Email*" onkeyup="FillCustomerDetails(this)">
                <label for="Email"> &nbsp; Email*</label>
            </div>
            <div class="form-floating  col-12 mb-3">
                <input type="text" class="form-control" id="Name" placeholder="Name*" disabled>
                <label for="Name"> &nbsp; Name*</label>
            </div>
            <div class="form-floating  col-12 mb-3">
                <input type="text" class="form-control" id="mobile" placeholder="Mobile Number*" disabled>
                <label for="Mobile"> &nbsp; Mobile Number*</label>
            </div>
            <div class="form-floating  col-md-6 col-12 mb-3">
                <input type="text" class="form-control" id="persons" placeholder="Mobile Number*" disabled>
                <label for="persons"> &nbsp; No Of persons*</label>
            </div>
            <div class="form-floating  col-md-6 col-12 mb-3">
                <input type="text" class="form-control" id="sectionName" placeholder="Section*" disabled>
                <label for="sectionName"> &nbsp; Section*</label>
            </div>
        </div>

        <div class="d-flex justify-content-end">
            <button type="submit" class="btn btn-primary me-2" onclick="AssignTableToCustomer()">Assign</button>
            <button type="button" class="btn btn-outline-primary" data-bs-dismiss="offcanvas"
                aria-label="Close">cancel</button>
        </div>
    </div>
}

<script>
    var data = @Html.Raw(Json.Serialize(Model.waitinglistdetails));
    console.log(data);
    var listOfTableID = [];


    function FillCustomerDetails(tag) {
        @* console.log(data); *@
        for (i = 0; i < data.length; i++) {
            if (tag.value == data[i].customerDetails.email) {
                document.getElementById(`waitingListCheckbod-${data[i].id}`).checked = true;
                document.getElementById("Name").value = data[i].name;
                document.getElementById("mobile").value = data[i].customerDetails.mobileno;
                document.getElementById("persons").value = data[i].noOfPerson;
                document.getElementById("sectionName").value = data[i].customerDetails.sectionName;
                break;
            } else {
                document.getElementById(`waitingListCheckbod-${data[i].id}`).checked = false;
                document.getElementById("Name").value = "";
                document.getElementById("mobile").value = "";
                document.getElementById("persons").value = "";
                document.getElementById("sectionName").value = "";
            }
        }
    }

    function FillCustomerDetailsByRadio(waitingId) {

        for (i = 0; i < data.length; i++) {
            console.log(waitingId == data[i].id)
            if (waitingId == data[i].id) {
                document.getElementById("Email").value = data[i].customerDetails.email;
                document.getElementById("Name").value = data[i].name;
                document.getElementById("mobile").value = data[i].customerDetails.mobileno;
                document.getElementById("persons").value = data[i].noOfPerson;
                document.getElementById("sectionName").value = data[i].customerDetails.sectionName;
            }
        }
    }

    function AssignTableToCustomer() {
        var selectedclass = document.getElementsByClassName("TableSelected");
        var waitingListRadio = document.getElementsByClassName("waitingListOffcanvasCheckbox");
        var flag = false;
        var totalPerson = 0;
        for (i = 0; i < selectedclass.length; i++) {
            totalPerson += parseInt(selectedclass[i].children[1].children[0].children[1].innerHTML);
        }
        for (i = 0; i < waitingListRadio.length; i++) {
            if (waitingListRadio[i].checked) {
                flag = true;
                if (parseInt(waitingListRadio[i].parentElement.parentElement.children[3].innerHTML) > totalPerson) {
                    errorToaster("Number of person is greater than Total Capacity of selected tables");
                    break;
                }
                for (i = 0; i < selectedclass.length; i++) {
                    listOfTableID.push(parseInt(selectedclass[i].parentElement.children[0].innerHTML));
                }
                $.ajax({
                    url: "/OrderAppTable/AssignTable",
                    type: "POST",
                    data: { Email: document.getElementById("Email").value, TableIds: listOfTableID },
                    success: function (data) {
                        $(".btn-close").click();
                         if (data.success) {
                            successToaster(data.text);
                        } else {
                            errorToaster(data.text);
                        }
                        getSectionList();
                    }
                })
                break;
            }
        }
        if (!flag) {
            errorToaster("Select a customer First")
        }
    }

</script>
